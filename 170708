#include <iostream>
using namespace std;

typedef long long ll;
int N, K;
ll DP[251][251];

ll palindrom(int n, int r) {
    if(r == 0) return 1;
    if(r < 0) return 0;
    if(DP[n][r] == -1) {
        ll ret = 0;
        for(int i=n; i>0; i--) {
            ret += palindrom(i, r - i);
        }
        DP[n][r] = ret;
    }
    return DP[n][r];
}

int main(int argc, const char * argv[]) {
    // N(<=250), K(<=250)
    int tc;
    cin >> tc;
    for(int i=0; i<=250; i++)
        for(int j=0 ;j<=250; j++)
            DP[i][j] = -1;
    for(int test_case=1; test_case<=tc; test_case++){
        cin >> N >> K;
        int m = N / 2;
        ll ret = ((N == K) ? 1 : 0);
        if(N % 2 == 0) {
            for(int i=K; i>0; i--) {
                //type 1
                if(i % 2 == 0)
                    ret += palindrom(i, m - (i / 2));
                //type 2
                ret += palindrom(i, m - i);
            }
        } else {
            for(int i=K; i>0; i--) {
                //type 1
                if(i % 2 != 0)
                    ret +=palindrom(i, m - (i / 2));
            }
        }
        cout << "#" << test_case << " " << ret << endl;
    }
    return 0;
}
